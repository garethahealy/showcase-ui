apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: eap72-basic-s2i
  xpaas: 1.1.0
message: A new EAP based application has been created in your project.
metadata:
  annotations:
    description: An example Red Hat JBoss EAP 7 application. For more information
      about using this template, see https://github.com/jboss-container-images/jboss-eap-7-openshift-image/blob/eap72/README.adoc
    iconClass: icon-eap
    openshift.io/display-name: JBoss EAP 7.2
    openshift.io/provider-display-name: Red Hat, Inc.
    samples.operator.openshift.io/version: 4.3.1
    tags: eap,javaee,java,jboss
    template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/
    template.openshift.io/long-description: This template defines resources needed
      to develop a Red Hat JBoss Enterprise Application Platform 7.2 based application,
      including a build configuration, application deployment configuration and secure
      communication using edge TLS.
    template.openshift.io/support-url: https://access.redhat.com
    version: 1.1.0
  name: eap72-basic-s2i
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
        - port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
        - name: ping
          port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
            - name: BUILD_LOGLEVEL
              value: '5'
            - name: MAVEN_MIRROR_URL
              value: ${MAVEN_MIRROR_URL}
            - name: MAVEN_ARGS_APPEND
              value: ${MAVEN_ARGS_APPEND}
            - name: ARTIFACT_DIR
              value: ${ARTIFACT_DIR}
            - name: ARTIFACT_COPY_ARGS
              value: ${ARTIFACT_COPY_ARGS}
            - name: KIE_USER
              value: ${KIE_USER}
            - name: KIE_USERNAME_PWD
              value: ${KIE_USERNAME_PWD}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-eap72-openshift:1.1
            namespace: openshift
          incremental: true
        type: Source
      triggers:
      - type: ConfigChange
      - imageChange: {}
        type: ImageChange
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
            - env:
                - name: JGROUPS_PING_PROTOCOL
                  value: dns.DNS_PING
                - name: OPENSHIFT_DNS_PING_SERVICE_NAME
                  value: ${APPLICATION_NAME}-ping
                - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                  value: "8888"
                - name: MQ_CLUSTER_PASSWORD
                  value: ${MQ_CLUSTER_PASSWORD}
                - name: MQ_QUEUES
                  value: ${MQ_QUEUES}
                - name: MQ_TOPICS
                  value: ${MQ_TOPICS}
                - name: JGROUPS_CLUSTER_PASSWORD
                  value: ${JGROUPS_CLUSTER_PASSWORD}
                - name: AUTO_DEPLOY_EXPLODED
                  value: ${AUTO_DEPLOY_EXPLODED}
                - name: KIE_SERVER_LOCATION
                  value: ${KIE_SERVER_LOCATION}
                - name: KIE_USER
                  value: ${KIE_USER}
                - name: KIE_USERNAME_PWD
                  value: ${KIE_USERNAME_PWD}
              image: ${APPLICATION_NAME}
              imagePullPolicy: Always
              livenessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - /opt/eap/bin/livenessProbe.sh
                initialDelaySeconds: 60
              name: ${APPLICATION_NAME}
              ports:
                - containerPort: 8778
                  name: jolokia
                  protocol: TCP
                - containerPort: 8080
                  name: http
                  protocol: TCP
                - containerPort: 8888
                  name: ping
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - /opt/eap/bin/readinessProbe.sh false
                initialDelaySeconds: 10
              resources:
                limits:
                  memory: ${MEMORY_LIMIT}
          terminationGracePeriodSeconds: 75
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              name: ${APPLICATION_NAME}:latest
          type: ImageChange
        - type: ConfigChange
parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: rhpam-case-mgmt-showcase
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/garethahealy/showcase-ui.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: master
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: .
  - description: Queue names, separated by commas. These queues will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all queues used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Queues
    name: MQ_QUEUES
  - description: Topic names, separated by commas. These topics will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all topics used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Topics
    name: MQ_TOPICS
  - description: AMQ cluster admin password
    displayName: AMQ cluster password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: MQ_CLUSTER_PASSWORD
    required: true
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Controls whether exploded deployment content should be automatically
      deployed
    displayName: Deploy Exploded Archives
    name: AUTO_DEPLOY_EXPLODED
    value: "false"
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
    value: http://mavenrepo.codeready-workspaces.svc.cluster.local:8080/bucketrepo/
  - description: Maven additional arguments to use for S2I builds
    displayName: Maven Additional Arguments
    name: MAVEN_ARGS_APPEND
    value: -Dcom.redhat.xpaas.repo.jbossorg
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
    value: ./target/war
  - description: Container memory limit
    name: MEMORY_LIMIT
    value: 1Gi
  - name: ARTIFACT_COPY_ARGS
    description: Syntax to be used to copy uberjar files to the target directory
    displayName: Copy Args
    value: '*.war'
    required: true
  - description: KIE_SERVER_LOCATION
    name: KIE_SERVER_LOCATION
    value: 1Gi
    required: true
  - description: KIE_SERVER_LOCATION
    name: KIE_SERVER_LOCATION
    value: http://rhpam-authoring-kieserver:8080/services/rest/server
    required: true
  - description: KIE_USER
    name: KIE_USER
    value: user1
    required: true
  - description: KIE_USERNAME_PWD
    name: KIE_USERNAME_PWD
    value: a123456
    required: true